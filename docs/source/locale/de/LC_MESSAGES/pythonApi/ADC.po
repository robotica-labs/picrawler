# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, SunFounder
# This file is distributed under the same license as the SunFounder Robot
# HAT package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: SunFounder Robot HAT \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-05-23 17:47+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: de\n"
"Language-Team: de <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.15.0\n"

#: ../pythonApi/ADC.rst:3
msgid ""
"Hello, welcome to the SunFounder Raspberry Pi & Arduino & ESP32 "
"Enthusiasts Community on Facebook! Dive deeper into Raspberry Pi, "
"Arduino, and ESP32 with fellow enthusiasts."
msgstr ""

#: ../pythonApi/ADC.rst:5
msgid "**Why Join?**"
msgstr ""

#: ../pythonApi/ADC.rst:7
msgid ""
"**Expert Support**: Solve post-sale issues and technical challenges with "
"help from our community and team."
msgstr ""

#: ../pythonApi/ADC.rst:8
msgid "**Learn & Share**: Exchange tips and tutorials to enhance your skills."
msgstr ""

#: ../pythonApi/ADC.rst:9
msgid ""
"**Exclusive Previews**: Get early access to new product announcements and"
" sneak peeks."
msgstr ""

#: ../pythonApi/ADC.rst:10
msgid "**Special Discounts**: Enjoy exclusive discounts on our newest products."
msgstr ""

#: ../pythonApi/ADC.rst:11
msgid ""
"**Festive Promotions and Giveaways**: Take part in giveaways and holiday "
"promotions."
msgstr ""

#: ../pythonApi/ADC.rst:13
msgid ""
"ðŸ‘‰ Ready to explore and create with us? Click [|link_sf_facebook|] and "
"join today!"
msgstr ""

#: ../pythonApi/ADC.rst:18
msgid "class ``ADC`` - analog to digital converter"
msgstr ""

#: ../pythonApi/ADC.rst:20
msgid "**Usage**"
msgstr ""

#: ../pythonApi/ADC.rst:29
msgid "**Constructors**"
msgstr ""

#: ../pythonApi/ADC.rst:31
msgid ""
"``class robot_hat.ADC(pin)``: Create an ADC object associated with the "
"given pin. This allows you to then read analog values on that pin."
msgstr ""

#: ../pythonApi/ADC.rst:33
msgid "**Methods**"
msgstr ""

#: ../pythonApi/ADC.rst:35
msgid ""
"``read`` - Read the value on the analog pin and return it. The returned "
"value will be between 0 and 4095."
msgstr ""

