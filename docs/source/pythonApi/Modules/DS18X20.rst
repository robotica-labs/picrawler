.. note::

    Hallo und willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Gemeinschaft auf Facebook! Tauchen Sie tiefer ein in die Welt von Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten.

    **Warum beitreten?**

    - **Expertenunterst√ºtzung**: L√∂sen Sie Nachverkaufsprobleme und technische Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Anleitungen aus, um Ihre F√§higkeiten zu verbessern.
    - **Exklusive Vorschauen**: Erhalten Sie fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und exklusiven Einblicken.
    - **Spezialrabatte**: Genie√üen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und Feiertagsaktionen teil.

    üëâ Sind Sie bereit, mit uns zu erkunden und zu erschaffen? Klicken Sie auf [|link_sf_facebook|] und treten Sie heute bei!

Klasse ``DS18X20`` - Temperatursensor der DS18X20-Serie
=======================================================

**Verwendung**

.. code-block:: python

    from robot_hat import Pin, DS18X20

    pin = Pin("D0")                    # Pin-Objekt erstellen
    ds = DS18X20(pin)                  # DS18X20-Objekt erstellen

    ds.read(ds.C)                      # Temperatur in Celsius lesen
    ds.read(0)                         # Temperatur in Fahrenheit lesen

**Konstruktoren**

``class robot_hat.DS18X20(pin)``: Erstellt ein DS18X20-Objekt, das mit dem gegebenen Pin-Objekt verkn√ºpft ist. Dies erm√∂glicht das Auslesen der Temperatur vom DS18X20.

**Methoden**

-  ``DS18X20.read`` - Liest die Temperatur in der angegebenen Einheit. Gibt einen ``float`` Wert zur√ºck, falls nur ein DS18X20 am Pin angeschlossen ist, oder eine Liste aller Sensorwerte.

.. code-block:: python

    DS18X20.read(unit)

-  ``DS18X20.scan`` - Scannt die angeschlossenen DS18X20 und gibt die Liste der ROM-Adressen zur√ºck.

.. code-block:: python

    DS18X20.scan()

-  ``DS18X20.read_temp`` - Liest die Temperatur(en) mit den angegebenen ROM(s).

.. code-block:: python

    DS18X20.read_temp(rom)

**Konstanten**

-  ``DS18X20.C`` - Celsius
-  ``DS18X20.F`` - Fahrenheit